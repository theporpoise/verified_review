{
  "name": "helloblock-js",
  "version": "0.2.5",
  "description": "HelloBlock JS Client Library",
  "keywords": [
    "bitcoin",
    "helloblock"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/helloblock/helloblock-js"
  },
  "scripts": {
    "test": "./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- -R spec"
  },
  "main": "./lib/helloblock.js",
  "author": {
    "name": "Scott Li"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "request": "~2.33.0",
    "underscore": "~1.6.0",
    "browser-request": "^0.3.1"
  },
  "browser": {
    "request": "browser-request"
  },
  "testling": {
    "browsers": [
      "chrome/20..latest",
      "firefox/21..latest",
      "safari/latest",
      "opera/15..latest",
      "iphone/6..latest",
      "ipad/6..latest",
      "android-browser/4.2..latest"
    ],
    "harness": "mocha-bdd",
    "files": "test/*.js"
  },
  "devDependencies": {
    "mocha": "~1.18.1",
    "chai": "~1.9.0",
    "testling": "^1.6.1",
    "istanbul": "^0.2.7",
    "browserify": "https://github.com/substack/node-browserify/tarball/master"
  },
  "readme": "[![NodeJS Runtime](https://circleci.com/gh/helloblock/helloblock-js.png?circle-token=a5ed26a1db80f4937ed2b118e6a460b96054e9cf)](https://circleci.com/gh/helloblock/helloblock-js.png?circle-token=a5ed26a1db80f4937ed2b118e6a460b96054e9cf)\n\n[![Browser Runtime](https://ci.testling.com/helloblock/helloblock-js.png)](https://ci.testling.com/helloblock/helloblock-js.png)\n### HelloBlock-js\n\nJavascript Client Wrappers for the [HelloBlock API][API].\n\n## Installation:\n\nThis module is published in NPM:\n\n```bash\n$ npm install helloblock-js --save\n```\n\n## API documentation\n\n### Instantiating a Client\n\n\n```js\nvar helloblock = require(\"../lib/helloblock\")({\n  network: 'testnet',\n  debug: true\n})\n```\n\nThis generates a new API client. It accepts an options argument which is used to configure the client.\n\n##### options:\n\n- `network` **string** Setting the target network (```mainnet```, ```testnet```)\n- `version` **string** Pointing to particular API version (```v1```)\n- `debug`   **string** Output debugging information to the console\n\n\nThis options argument can will be an object with the properties specified\nabove.\n\n\n### helloblock client\n\nThe API calls are generally constructed as `resource` and `action`:\n\nThe second last argument is an optional `[options]` argument and the last argument is the callback.\n\n- `err` error object if there is something wrong in the API call or if status code is above 400\n- `response` response object contains the full body of the response, including all the required meta-data\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"transactions\": [\n       {\n        // transaction\n       },\n       {\n        // transaction\n       }\n       // ...more transactions...\n    ]\n  }\n}\n```\n\n- `resource` resource object contains only the actual data of the response\n```json\n[\n   {\n    // transaction\n   },\n   {\n    // transaction\n   }\n   // ...more transactions...\n]\n```\n\n```js\nhelloblock.resource.action('data', [options], function (err, response, resource) {\n  if (err) {\n    throw err;\n  }\n\n});\n```\n\nThe following API resources are exposes in the module:\n\n- [transactions](#helloblocktransactions)\n  - [transactions.get(txHash, callback)](#helloblocktransactionsget)\n  - [transactions.batchGet(txHashes, callback)](#helloblocktransactionsbatchget)\n  - [transactions.latest([options], callback)](#helloblocktransactionslatest)\n  - [transactions.propagate(rawTxHex, callback)](#helloblocktransactionspropagate)\n- addresses\n  - addresses.get(address, callback)\n  - addresses.batchGet(addresses, callback)\n  - addresses.getTransactions(addresses, [options], callback)\n  - addresses.getUnspents(addresses, [options], callback)\n- blocks\n  - blocks.get(blockId, callback)\n  - blocks.latest([options], callback)\n- faucet\n  - faucet.get(type, callback)\n  - faucet.withdraw(toAddress, value, callback)\n- wallet\n  - wallet.get(addresses, [options], callback)\n\n### helloblock.transactions\n#### helloblock.transactions.get\n\nGet a transaction by its [txHash]('https://helloblock.io/docs/ref#transactions-single')\n\n##### Arguments\n\n- `txHash` **string**\n- `callback` **function**\n\n```js\nhelloblock.transactions.get('2542cd64e02d902975dc6e2e97797ceec5a84e8597c80d22a9e2dbd16e748738', function (err, resp, resource) {\n  /*\n    use the resource\n  */\n});\n```\n\n#### helloblock.transactions.batchGet\n\nGet transactions by an array of [txHashes]('https://helloblock.io/docs/ref#transactions-batch')\n\n##### Arguments\n\n- `txHashes` **Array[String]**\n- `callback` **function**\n\n```js\nvar txHashes = ['2542cd64e02d902975dc6e2e97797ceec5a84e8597c80d22a9e2dbd16e748738', '6f9e9570881e781db8c137c84c111a138e4a022e6b2def5e2a1589a802fe25f3']\nhelloblock.transactions.getBatch(txHashes, function (err, resp, resource) {\n  /*\n    use the resource\n  */\n});\n```\n\n#### helloblock.transactions.latest\n\nGet [latest]('https://helloblock.io/docs/ref#transactions-latest') transactions sorted by timestamp\n\n##### Arguments\n\n- `options` **object** (`limit` {integer}, `offset` {integer})\n- `callback` **function**\n\n```js\nhelloblock.transactions.latest({limit: 10, offset: 10}, function (err, resp, resource) {\n  /*\n    use the resource\n  */\n});\n```\n\n#### helloblock.transactions.propagate\n\n[Propagate]('https://helloblock.io/docs/ref#transactions-post') a raw transaction to the Bitcoin network\n\n##### Arguments\n\n- `rawTxHex` **string**\n- `callback` **function**\n\n```js\nvar rawTxHex = '0100000001ec71e2ceac84....'\nhelloblock.transactions.latest(rawTxHex, function (err, resp, resource) {\n  /*\n    use the resource\n  */\n});\n```\n\n\n## Tests\n\nAll tests should be run with [npm](http://npmjs.org):\n\n```bash\n$ npm test\n```\n\n\n[API]: https://helloblock.io/docs/ref\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/helloblock/helloblock-js/issues"
  },
  "_id": "helloblock-js@0.2.5",
  "dist": {
    "shasum": "c9c3304bd82aae9a7e5cdb940a35c14c5421754f"
  },
  "_from": "helloblock-js@",
  "_resolved": "https://registry.npmjs.org/helloblock-js/-/helloblock-js-0.2.5.tgz"
}
